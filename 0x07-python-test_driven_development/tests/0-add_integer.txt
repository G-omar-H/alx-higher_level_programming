===============================
 How to Use doctest_in_help.py
===============================

This library is very simple, since it only has one function called
``add_integer()``.

Numbers
=======

``add_integer()`` returns the product of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

::

    >>> add_integer = __import__('0-add_integer').add_integer

::

    >>> add_integer(1, 2)
    3

::

    >>> add_integer(2.6, 3)
    5

::

    >>> add_integer(2, 3.5)
    5

::

    >>> add_integer(3)
    101

::

    >>> add_integer(-1, 3)
    2

::

    >>> add_integer(3, -4)
    -1

::

    >>> add_integer(-33, -22)
    -55

::

    >>> add_integer(0, 13)
    13

::

    >>> add_integer(15, 0)
    15

::

    >>> add_integer(-111, 0)
    -111

::

    >>> add_integer(0, -2313)
    -2313

::

    >>> add_integer(-1, 3)
    2

::

    >>> add_integer(0, 0)
    0

::

    >>> add_integer("a", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(3, "b")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(-1)
    97

::

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

::

    >>> add_integer(5, 2, 8)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

::

    >>> add_integer(0)
    98

::